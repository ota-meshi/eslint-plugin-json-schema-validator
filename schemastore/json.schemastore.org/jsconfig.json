{"title":"JSON schema for a JavaScript project using TypeScript tooling","$schema":"http://json-schema.org/draft-07/schema","definitions":{"//":{"explainer":"https://www.typescriptlang.org/docs/handbook/tsconfig-json.html#overview","reference":"https://www.typescriptlang.org/tsconfig","reference metadata":"https://github.com/microsoft/TypeScript-Website/blob/v2/packages/tsconfig-reference/scripts/tsconfigRules.ts"},"filesDefinition":{"properties":{"files":{"type":"array","uniqueItems":true,"items":{"type":"string"}}}},"excludeDefinition":{"properties":{"exclude":{"type":"array","uniqueItems":true,"items":{"type":"string"}}}},"includeDefinition":{"properties":{"include":{"type":"array","uniqueItems":true,"items":{"type":"string"}}}},"compileOnSaveDefinition":{"properties":{"compileOnSave":{"type":"boolean"}}},"extendsDefinition":{"properties":{"extends":{"type":"string"}}},"buildOptionsDefinition":{"properties":{"buildOptions":{"properties":{"dry":{"type":"boolean","default":false},"force":{"type":"boolean","default":false,"markdownDescription":"Build all projects, including those that appear to be up to date\n\nSee more: https://www.typescriptlang.org/tsconfig#force"},"verbose":{"type":"boolean","default":false,"markdownDescription":"Enable verbose logging\n\nSee more: https://www.typescriptlang.org/tsconfig#verbose"},"incremental":{"type":"boolean","default":false,"markdownDescription":"Save .tsbuildinfo files to allow for incremental compilation of projects.\n\nSee more: https://www.typescriptlang.org/tsconfig#incremental"},"assumeChangesOnlyAffectDirectDependencies":{"type":"boolean","default":false,"markdownDescription":"Have recompiles in projects that use `incremental` and `watch` mode assume that changes within a file will only affect files directly depending on it.\n\nSee more: https://www.typescriptlang.org/tsconfig#assumeChangesOnlyAffectDirectDependencies"},"traceResolution":{"type":"boolean","default":false,"markdownDescription":"Log paths used during the `moduleResolution` process.\n\nSee more: https://www.typescriptlang.org/tsconfig#traceResolution"}}}}},"watchOptionsDefinition":{"properties":{"watchOptions":{"type":"object","properties":{"force":{"type":"string"},"watchFile":{"type":"string","markdownDescription":"Specify how the TypeScript watch mode works.\n\nSee more: https://www.typescriptlang.org/tsconfig#watchFile"},"watchDirectory":{"type":"string","markdownDescription":"Specify how directories are watched on systems that lack recursive file-watching functionality.\n\nSee more: https://www.typescriptlang.org/tsconfig#watchDirectory"},"fallbackPolling":{"type":"string","markdownDescription":"Specify what approach the watcher should use if the system runs out of native file watchers.\n\nSee more: https://www.typescriptlang.org/tsconfig#fallbackPolling"},"synchronousWatchDirectory":{"type":"boolean","markdownDescription":"Synchronously call callbacks and update the state of directory watchers on platforms that don`t support recursive watching natively.\n\nSee more: https://www.typescriptlang.org/tsconfig#synchronousWatchDirectory"},"excludeFiles":{"type":"array","uniqueItems":true,"items":{"type":"string"},"markdownDescription":"Remove a list of files from the watch mode's processing.\n\nSee more: https://www.typescriptlang.org/tsconfig#excludeFiles"},"excludeDirectories":{"type":"array","uniqueItems":true,"items":{"type":"string"},"markdownDescription":"Remove a list of directories from the watch process.\n\nSee more: https://www.typescriptlang.org/tsconfig#excludeDirectories"}}}}},"compilerOptionsDefinition":{"properties":{"compilerOptions":{"type":"object","properties":{"charset":{"type":"string","markdownDescription":"No longer supported. In early versions, manually set the text encoding for reading files.\n\nSee more: https://www.typescriptlang.org/tsconfig#charset"},"composite":{"type":"boolean","default":true,"markdownDescription":"Enable constraints that allow a TypeScript project to be used with project references.\n\nSee more: https://www.typescriptlang.org/tsconfig#composite"},"declaration":{"type":"boolean","default":false,"markdownDescription":"Generate .d.ts files from TypeScript and JavaScript files in your project.\n\nSee more: https://www.typescriptlang.org/tsconfig#declaration"},"declarationDir":{"type":["string","null"],"markdownDescription":"Specify the output directory for generated declaration files.\n\nSee more: https://www.typescriptlang.org/tsconfig#declarationDir"},"diagnostics":{"type":"boolean","markdownDescription":"Output compiler performance information after building.\n\nSee more: https://www.typescriptlang.org/tsconfig#diagnostics"},"disableReferencedProjectLoad":{"type":"boolean","markdownDescription":"Reduce the number of projects loaded automatically by TypeScript.\n\nSee more: https://www.typescriptlang.org/tsconfig#disableReferencedProjectLoad"},"noPropertyAccessFromIndexSignature":{"type":"boolean","markdownDescription":"Enforces using indexed accessors for keys declared using an indexed type\n\nSee more: https://www.typescriptlang.org/tsconfig#noPropertyAccessFromIndexSignature"},"emitBOM":{"type":"boolean","default":false,"markdownDescription":"Emit a UTF-8 Byte Order Mark (BOM) in the beginning of output files.\n\nSee more: https://www.typescriptlang.org/tsconfig#emitBOM"},"emitDeclarationOnly":{"type":"boolean","default":false,"markdownDescription":"Only output d.ts files and not JavaScript files.\n\nSee more: https://www.typescriptlang.org/tsconfig#emitDeclarationOnly"},"exactOptionalPropertyTypes":{"type":"boolean","default":false,"markdownDescription":"Differentiate between undefined and not present when type checking\n\nSee more: https://www.typescriptlang.org/tsconfig#exactOptionalPropertyTypes"},"incremental":{"type":"boolean"},"tsBuildInfoFile":{"default":".tsbuildinfo","type":"string","markdownDescription":"Specify the folder for .tsbuildinfo incremental compilation files.\n\nSee more: https://www.typescriptlang.org/tsconfig#tsBuildInfoFile"},"inlineSourceMap":{"type":"boolean","default":false,"markdownDescription":"Include sourcemap files inside the emitted JavaScript.\n\nSee more: https://www.typescriptlang.org/tsconfig#inlineSourceMap"},"inlineSources":{"type":"boolean","default":false,"markdownDescription":"Include source code in the sourcemaps inside the emitted JavaScript.\n\nSee more: https://www.typescriptlang.org/tsconfig#inlineSources"},"jsx":{"enum":["preserve","react","react-jsx","react-jsxdev","react-native"]},"reactNamespace":{"type":"string","default":"React","markdownDescription":"Specify the object invoked for `createElement`. This only applies when targeting `react` JSX emit.\n\nSee more: https://www.typescriptlang.org/tsconfig#reactNamespace"},"jsxFactory":{"type":"string","default":"React.createElement","markdownDescription":"Specify the JSX factory function used when targeting React JSX emit, e.g. 'React.createElement' or 'h'\n\nSee more: https://www.typescriptlang.org/tsconfig#jsxFactory"},"jsxFragmentFactory":{"type":"string","default":"React.Fragment","markdownDescription":"Specify the JSX Fragment reference used for fragments when targeting React JSX emit e.g. 'React.Fragment' or 'Fragment'.\n\nSee more: https://www.typescriptlang.org/tsconfig#jsxFragmentFactory"},"jsxImportSource":{"type":"string","default":"react","markdownDescription":"Specify module specifier used to import the JSX factory functions when using `jsx: react-jsx`.\n\nSee more: https://www.typescriptlang.org/tsconfig#jsxImportSource"},"listFiles":{"type":"boolean","default":false,"markdownDescription":"Print all of the files read during the compilation.\n\nSee more: https://www.typescriptlang.org/tsconfig#listFiles"},"mapRoot":{"type":"string","markdownDescription":"Specify the location where debugger should locate map files instead of generated locations.\n\nSee more: https://www.typescriptlang.org/tsconfig#mapRoot"},"module":{"type":"string","anyOf":[{"enum":["CommonJS","AMD","System","UMD","ES6","ES2015","ES2020","ESNext","None","es2022","node16","nodenext"]},{"pattern":"^([Cc][Oo][Mm][Mm][Oo][Nn][Jj][Ss]|[AaUu][Mm][Dd]|[Ss][Yy][Ss][Tt][Ee][Mm]|[Ee][Ss]([356]|201[567]|2020|[Nn][Ee][Xx][Tt])|[Nn][Oo][Nn][Ee])$"}],"markdownDescription":"Specify what module code is generated.\n\nSee more: https://www.typescriptlang.org/tsconfig#module"},"moduleResolution":{"type":"string","anyOf":[{"enum":["Classic","Node","Node16","NodeNext"]},{"pattern":"^(([Nn]ode)|([Nn]ode12)|([Nn]ode[Nn]ext)|([Cc]lassic))$"}],"default":"classic","markdownDescription":"Specify how TypeScript looks up a file from a given module specifier.\n\nSee more: https://www.typescriptlang.org/tsconfig#moduleResolution"},"newLine":{"type":"string","anyOf":[{"enum":["crlf","lf"]},{"pattern":"^(CRLF|LF|crlf|lf)$"}],"markdownDescription":"Set the newline character for emitting files.\n\nSee more: https://www.typescriptlang.org/tsconfig#newLine"},"noEmit":{"type":"boolean","default":false,"markdownDescription":"Disable emitting file from a compilation.\n\nSee more: https://www.typescriptlang.org/tsconfig#noEmit"},"noEmitHelpers":{"type":"boolean","default":false,"markdownDescription":"Disable generating custom helper functions like `__extends` in compiled output.\n\nSee more: https://www.typescriptlang.org/tsconfig#noEmitHelpers"},"noEmitOnError":{"type":"boolean","default":false,"markdownDescription":"Disable emitting files if any type checking errors are reported.\n\nSee more: https://www.typescriptlang.org/tsconfig#noEmitOnError"},"noImplicitAny":{"type":"boolean","markdownDescription":"Enable error reporting for expressions and declarations with an implied `any` type..\n\nSee more: https://www.typescriptlang.org/tsconfig#noImplicitAny"},"noImplicitThis":{"type":"boolean","markdownDescription":"Enable error reporting when `this` is given the type `any`.\n\nSee more: https://www.typescriptlang.org/tsconfig#noImplicitThis"},"noUnusedLocals":{"type":"boolean","default":false,"markdownDescription":"Enable error reporting when a local variables aren't read.\n\nSee more: https://www.typescriptlang.org/tsconfig#noUnusedLocals"},"noUnusedParameters":{"type":"boolean","default":false,"markdownDescription":"Raise an error when a function parameter isn't read\n\nSee more: https://www.typescriptlang.org/tsconfig#noUnusedParameters"},"noLib":{"type":"boolean","default":false,"markdownDescription":"Disable including any library files, including the default lib.d.ts.\n\nSee more: https://www.typescriptlang.org/tsconfig#noLib"},"noResolve":{"type":"boolean","default":false,"markdownDescription":"Disallow `import`s, `require`s or `<reference>`s from expanding the number of files TypeScript should add to a project.\n\nSee more: https://www.typescriptlang.org/tsconfig#noResolve"},"noStrictGenericChecks":{"type":"boolean","default":false,"markdownDescription":"Disable strict checking of generic signatures in function types.\n\nSee more: https://www.typescriptlang.org/tsconfig#noStrictGenericChecks"},"skipDefaultLibCheck":{"type":"boolean","default":false,"markdownDescription":"Skip type checking .d.ts files that are included with TypeScript.\n\nSee more: https://www.typescriptlang.org/tsconfig#skipDefaultLibCheck"},"skipLibCheck":{"type":"boolean","default":false,"markdownDescription":"Skip type checking all .d.ts files.\n\nSee more: https://www.typescriptlang.org/tsconfig#skipLibCheck"},"outFile":{"type":"string","markdownDescription":"Specify a file that bundles all outputs into one JavaScript file. If `declaration` is true, also designates a file that bundles all .d.ts output.\n\nSee more: https://www.typescriptlang.org/tsconfig#outFile"},"outDir":{"type":"string","markdownDescription":"Specify an output folder for all emitted files.\n\nSee more: https://www.typescriptlang.org/tsconfig#outDir"},"preserveConstEnums":{"type":"boolean","default":false,"markdownDescription":"Disable erasing `const enum` declarations in generated code.\n\nSee more: https://www.typescriptlang.org/tsconfig#preserveConstEnums"},"preserveSymlinks":{"type":"boolean","default":false,"markdownDescription":"Disable resolving symlinks to their realpath. This correlates to the same flag in node.\n\nSee more: https://www.typescriptlang.org/tsconfig#preserveSymlinks"},"preserveValueImports":{"type":"boolean","default":false,"markdownDescription":"Preserve unused imported values in the JavaScript output that would otherwise be removed\n\nSee more: https://www.typescriptlang.org/tsconfig#preserveValueImports"},"preserveWatchOutput":{"type":"boolean","markdownDescription":"Disable wiping the console in watch mode\n\nSee more: https://www.typescriptlang.org/tsconfig#preserveWatchOutput"},"pretty":{"type":"boolean","default":true,"markdownDescription":"Enable color and formatting in output to make compiler errors easier to read\n\nSee more: https://www.typescriptlang.org/tsconfig#pretty"},"removeComments":{"type":"boolean","default":false,"markdownDescription":"Disable emitting comments.\n\nSee more: https://www.typescriptlang.org/tsconfig#removeComments"},"rootDir":{"type":"string","markdownDescription":"Specify the root folder within your source files.\n\nSee more: https://www.typescriptlang.org/tsconfig#rootDir"},"isolatedModules":{"type":"boolean","default":false,"markdownDescription":"Ensure that each file can be safely transpiled without relying on other imports.\n\nSee more: https://www.typescriptlang.org/tsconfig#isolatedModules"},"sourceMap":{"type":"boolean","default":false,"markdownDescription":"Create source map files for emitted JavaScript files.\n\nSee more: https://www.typescriptlang.org/tsconfig#sourceMap"},"sourceRoot":{"type":"string","markdownDescription":"Specify the root path for debuggers to find the reference source code.\n\nSee more: https://www.typescriptlang.org/tsconfig#sourceRoot"},"suppressExcessPropertyErrors":{"type":"boolean","default":false,"markdownDescription":"Disable reporting of excess property errors during the creation of object literals.\n\nSee more: https://www.typescriptlang.org/tsconfig#suppressExcessPropertyErrors"},"suppressImplicitAnyIndexErrors":{"type":"boolean","default":false,"markdownDescription":"Suppress `noImplicitAny` errors when indexing objects that lack index signatures.\n\nSee more: https://www.typescriptlang.org/tsconfig#suppressImplicitAnyIndexErrors"},"stripInternal":{"type":"boolean","markdownDescription":"Disable emitting declarations that have `@internal` in their JSDoc comments.\n\nSee more: https://www.typescriptlang.org/tsconfig#stripInternal"},"target":{"type":"string","default":"ES3","anyOf":[{"enum":["ES3","ES5","ES6","ES2015","ES2016","ES2017","ES2018","ES2019","ES2020","ES2021","ES2022","ESNext"]},{"pattern":"^([Ee][Ss]([356]|(20(1[56789]|2[012]))|[Nn][Ee][Xx][Tt]))$"}],"markdownDescription":"Set the JavaScript language version for emitted JavaScript and include compatible library declarations.\n\nSee more: https://www.typescriptlang.org/tsconfig#target"},"useUnknownInCatchVariables":{"type":"boolean","default":false,"markdownDescription":"Default catch clause variables as `unknown` instead of `any`.\n\nSee more: https://www.typescriptlang.org/tsconfig#useUnknownInCatchVariables"},"watch":{"type":"boolean"},"fallbackPolling":{"enum":["fixedPollingInterval","priorityPollingInterval","dynamicPriorityPolling","fixedInterval","priorityInterval","dynamicPriority","fixedChunkSize"]},"watchDirectory":{"enum":["useFsEvents","fixedPollingInterval","dynamicPriorityPolling","fixedChunkSizePolling"],"default":"useFsEvents"},"watchFile":{"enum":["fixedPollingInterval","priorityPollingInterval","dynamicPriorityPolling","useFsEvents","useFsEventsOnParentDirectory","fixedChunkSizePolling"],"default":"useFsEvents"},"experimentalDecorators":{"type":"boolean","markdownDescription":"Enable experimental support for TC39 stage 2 draft decorators.\n\nSee more: https://www.typescriptlang.org/tsconfig#experimentalDecorators"},"emitDecoratorMetadata":{"type":"boolean","markdownDescription":"Emit design-type metadata for decorated declarations in source files.\n\nSee more: https://www.typescriptlang.org/tsconfig#emitDecoratorMetadata"},"allowUnusedLabels":{"type":"boolean","markdownDescription":"Disable error reporting for unused labels.\n\nSee more: https://www.typescriptlang.org/tsconfig#allowUnusedLabels"},"noImplicitReturns":{"type":"boolean","default":false,"markdownDescription":"Enable error reporting for codepaths that do not explicitly return in a function.\n\nSee more: https://www.typescriptlang.org/tsconfig#noImplicitReturns"},"noUncheckedIndexedAccess":{"type":"boolean","markdownDescription":"Add `undefined` to a type when accessed using an index.\n\nSee more: https://www.typescriptlang.org/tsconfig#noUncheckedIndexedAccess"},"noFallthroughCasesInSwitch":{"type":"boolean","default":false,"markdownDescription":"Enable error reporting for fallthrough cases in switch statements.\n\nSee more: https://www.typescriptlang.org/tsconfig#noFallthroughCasesInSwitch"},"noImplicitOverride":{"type":"boolean","default":false,"markdownDescription":"Ensure overriding members in derived classes are marked with an override modifier.\n\nSee more: https://www.typescriptlang.org/tsconfig#noImplicitOverride"},"allowUnreachableCode":{"type":"boolean","markdownDescription":"Disable error reporting for unreachable code.\n\nSee more: https://www.typescriptlang.org/tsconfig#allowUnreachableCode"},"forceConsistentCasingInFileNames":{"type":"boolean","default":false,"markdownDescription":"Ensure that casing is correct in imports.\n\nSee more: https://www.typescriptlang.org/tsconfig#forceConsistentCasingInFileNames"},"generateCpuProfile":{"type":"string","default":"profile.cpuprofile","markdownDescription":"Emit a v8 CPU profile of the compiler run for debugging.\n\nSee more: https://www.typescriptlang.org/tsconfig#generateCpuProfile"},"baseUrl":{"type":"string","markdownDescription":"Specify the base directory to resolve non-relative module names.\n\nSee more: https://www.typescriptlang.org/tsconfig#baseUrl"},"paths":{"type":"object","additionalProperties":{"type":"array","uniqueItems":true,"items":{"type":"string"}},"markdownDescription":"Specify a set of entries that re-map imports to additional lookup locations.\n\nSee more: https://www.typescriptlang.org/tsconfig#paths"},"plugins":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string"}}},"markdownDescription":"Specify a list of language service plugins to include.\n\nSee more: https://www.typescriptlang.org/tsconfig#plugins"},"rootDirs":{"type":"array","uniqueItems":true,"items":{"type":"string"},"markdownDescription":"Allow multiple folders to be treated as one when resolving modules.\n\nSee more: https://www.typescriptlang.org/tsconfig#rootDirs"},"typeRoots":{"type":"array","uniqueItems":true,"items":{"type":"string"},"markdownDescription":"Specify multiple folders that act like `./node_modules/@types`.\n\nSee more: https://www.typescriptlang.org/tsconfig#typeRoots"},"types":{"type":"array","uniqueItems":true,"items":{"type":"string"},"markdownDescription":"Specify type package names to be included without being referenced in a source file.\n\nSee more: https://www.typescriptlang.org/tsconfig#types"},"traceResolution":{"type":"boolean","default":false},"allowJs":{"type":"boolean","default":false,"markdownDescription":"Allow JavaScript files to be a part of your program. Use the `checkJS` option to get errors from these files.\n\nSee more: https://www.typescriptlang.org/tsconfig#allowJs"},"noErrorTruncation":{"type":"boolean","default":false,"markdownDescription":"Disable truncating types in error messages.\n\nSee more: https://www.typescriptlang.org/tsconfig#noErrorTruncation"},"allowSyntheticDefaultImports":{"type":"boolean","markdownDescription":"Allow 'import x from y' when a module doesn't have a default export.\n\nSee more: https://www.typescriptlang.org/tsconfig#allowSyntheticDefaultImports"},"noImplicitUseStrict":{"type":"boolean","default":false,"markdownDescription":"Disable adding 'use strict' directives in emitted JavaScript files.\n\nSee more: https://www.typescriptlang.org/tsconfig#noImplicitUseStrict"},"listEmittedFiles":{"type":"boolean","default":false,"markdownDescription":"Print the names of emitted files after a compilation.\n\nSee more: https://www.typescriptlang.org/tsconfig#listEmittedFiles"},"disableSizeLimit":{"type":"boolean","default":false,"markdownDescription":"Remove the 20mb cap on total source code size for JavaScript files in the TypeScript language server.\n\nSee more: https://www.typescriptlang.org/tsconfig#disableSizeLimit"},"lib":{"type":"array","uniqueItems":true,"items":{"type":"string","anyOf":[{"enum":["ES5","ES6","ES2015","ES2015.Collection","ES2015.Core","ES2015.Generator","ES2015.Iterable","ES2015.Promise","ES2015.Proxy","ES2015.Reflect","ES2015.Symbol.WellKnown","ES2015.Symbol","ES2016","ES2016.Array.Include","ES2017","ES2017.Intl","ES2017.Object","ES2017.SharedMemory","ES2017.String","ES2017.TypedArrays","ES2018","ES2018.AsyncGenerator","ES2018.AsyncIterable","ES2018.Intl","ES2018.Promise","ES2018.Regexp","ES2019","ES2019.Array","ES2019.Object","ES2019.String","ES2019.Symbol","ES2020","ES2020.BigInt","ES2020.Promise","ES2020.String","ES2020.Symbol.WellKnown","ESNext","ESNext.Array","ESNext.AsyncIterable","ESNext.BigInt","ESNext.Intl","ESNext.Promise","ESNext.String","ESNext.Symbol","DOM","DOM.Iterable","ScriptHost","WebWorker","WebWorker.ImportScripts","Webworker.Iterable","ES7","ES2021","ES2020.SharedMemory","ES2020.Intl","ES2021.Promise","ES2021.String","ES2021.WeakRef","ESNext.WeakRef","es2021.intl"]},{"pattern":"^[Ee][Ss]5|[Ee][Ss]6|[Ee][Ss]7$"},{"pattern":"^[Ee][Ss]2015(\\.([Cc][Oo][Ll][Ll][Ee][Cc][Tt][Ii][Oo][Nn]|[Cc][Oo][Rr][Ee]|[Gg][Ee][Nn][Ee][Rr][Aa][Tt][Oo][Rr]|[Ii][Tt][Ee][Rr][Aa][Bb][Ll][Ee]|[Pp][Rr][Oo][Mm][Ii][Ss][Ee]|[Pp][Rr][Oo][Xx][Yy]|[Rr][Ee][Ff][Ll][Ee][Cc][Tt]|[Ss][Yy][Mm][Bb][Oo][Ll].[Ww][Ee][Ll][Ll][Kk][Nn][Oo][Ww][Nn]|[Ss][Yy][Mm][Bb][Oo][Ll]))?$"},{"pattern":"^[Ee][Ss]2016(\\.[Aa][Rr][Rr][Aa][Yy].[Ii][Nn][Cc][Ll][Uu][Dd][Ee])?$"},{"pattern":"^[Ee][Ss]2017(\\.([Ii][Nn][Tt][Ll]|[Oo][Bb][Jj][Ee][Cc][Tt]|[Ss][Hh][Aa][Rr][Ee][Dd][Mm][Ee][Mm][Oo][Rr][Yy]|[Ss][Tt][Rr][Ii][Nn][Gg]|[Tt][Yy][Pp][Ee][Dd][Aa][Rr][Rr][Aa][Yy][Ss]))?$"},{"pattern":"^[Ee][Ss]2018(\\.([Aa][Ss][Yy][Nn][Cc][Ii][Tt][Ee][Rr][Aa][Bb][Ll][Ee]|[Ii][Nn][Tt][Ll]|[Pp][Rr][Oo][Mm][Ii][Ss][Ee]|[Rr][Ee][Gg][Ee][Xx][Pp]))?$"},{"pattern":"^[Ee][Ss]2019(\\.([Aa][Rr][Rr][Aa][Yy]|[Oo][Bb][Jj][Ee][Cc][Tt]|[Ss][Tt][Rr][Ii][Nn][Gg]|[Ss][Yy][Mm][Bb][Oo][Ll]))?$"},{"pattern":"^[Ee][Ss]2020(\\.([Bb][Ii][Gg][Ii][Nn][Tt]|[Pp][Rr][Oo][Mm][Ii][Ss][Ee]|[Ss][Tt][Rr][Ii][Nn][Gg]|[Ss][Yy][Mm][Bb][Oo][Ll].[Ww][Ee][Ll][Ll][Kk][Nn][Oo][Ww][Nn]))?$"},{"pattern":"^[Ee][Ss]2021(\\.([Ii][Nn][Tt][Ll]|[Pp][Rr][Oo][Mm][Ii][Ss][Ee]|[Ss][Tt][Rr][Ii][Nn][Gg]|[Ww][Ee][Aa][Kk][Rr][Ee][Ff]))?$"},{"pattern":"^[Ee][Ss][Nn][Ee][Xx][Tt](\\.([Aa][Rr][Rr][Aa][Yy]|[Aa][Ss][Yy][Nn][Cc][Ii][Tt][Ee][Rr][Aa][Bb][Ll][Ee]|[Bb][Ii][Gg][Ii][Nn][Tt]|[Ii][Nn][Tt][Ll]|[Pp][Rr][Oo][Mm][Ii][Ss][Ee]|[Ss][Tt][Rr][Ii][Nn][Gg]|[Ss][Yy][Mm][Bb][Oo][Ll]|[Ww][Ee][Aa][Kk][Rr][Ee][Ff]))?$"},{"pattern":"^[Dd][Oo][Mm](\\.[Ii][Tt][Ee][Rr][Aa][Bb][Ll][Ee])?$"},{"pattern":"^[Ss][Cc][Rr][Ii][Pp][Tt][Hh][Oo][Ss][Tt]$"},{"pattern":"^[Ww][Ee][Bb][Ww][Oo][Rr][Kk][Ee][Rr](\\.[Ii][Mm][Pp][Oo][Rr][Tt][Ss][Cc][Rr][Ii][Pp][Tt][Ss])?$"}]},"markdownDescription":"Specify a set of bundled library declaration files that describe the target runtime environment.\n\nSee more: https://www.typescriptlang.org/tsconfig#lib"},"strictNullChecks":{"type":"boolean","default":false,"markdownDescription":"When type checking, take into account `null` and `undefined`.\n\nSee more: https://www.typescriptlang.org/tsconfig#strictNullChecks"},"maxNodeModuleJsDepth":{"type":"number","default":0,"markdownDescription":"Specify the maximum folder depth used for checking JavaScript files from `node_modules`. Only applicable with `allowJs`.\n\nSee more: https://www.typescriptlang.org/tsconfig#maxNodeModuleJsDepth"},"importHelpers":{"type":"boolean","default":false,"markdownDescription":"Allow importing helper functions from tslib once per project, instead of including them per-file.\n\nSee more: https://www.typescriptlang.org/tsconfig#importHelpers"},"importsNotUsedAsValues":{"default":"remove","enum":["remove","preserve","error"]},"alwaysStrict":{"type":"boolean","markdownDescription":"Ensure 'use strict' is always emitted.\n\nSee more: https://www.typescriptlang.org/tsconfig#alwaysStrict"},"strict":{"type":"boolean","default":false,"markdownDescription":"Enable all strict type checking options.\n\nSee more: https://www.typescriptlang.org/tsconfig#strict"},"strictBindCallApply":{"type":"boolean","default":false,"markdownDescription":"Check that the arguments for `bind`, `call`, and `apply` methods match the original function.\n\nSee more: https://www.typescriptlang.org/tsconfig#strictBindCallApply"},"downlevelIteration":{"type":"boolean","default":false,"markdownDescription":"Emit more compliant, but verbose and less performant JavaScript for iteration.\n\nSee more: https://www.typescriptlang.org/tsconfig#downlevelIteration"},"checkJs":{"type":"boolean","default":false,"markdownDescription":"Enable error reporting in type-checked JavaScript files.\n\nSee more: https://www.typescriptlang.org/tsconfig#checkJs"},"strictFunctionTypes":{"type":"boolean","default":false,"markdownDescription":"When assigning functions, check to ensure parameters and the return values are subtype-compatible.\n\nSee more: https://www.typescriptlang.org/tsconfig#strictFunctionTypes"},"strictPropertyInitialization":{"type":"boolean","default":false,"markdownDescription":"Check for class properties that are declared but not set in the constructor.\n\nSee more: https://www.typescriptlang.org/tsconfig#strictPropertyInitialization"},"esModuleInterop":{"type":"boolean","default":false,"markdownDescription":"Emit additional JavaScript to ease support for importing CommonJS modules. This enables `allowSyntheticDefaultImports` for type compatibility.\n\nSee more: https://www.typescriptlang.org/tsconfig#esModuleInterop"},"allowUmdGlobalAccess":{"type":"boolean","default":false,"markdownDescription":"Allow accessing UMD globals from modules.\n\nSee more: https://www.typescriptlang.org/tsconfig#allowUmdGlobalAccess"},"keyofStringsOnly":{"type":"boolean","default":false,"markdownDescription":"Make keyof only return strings instead of string, numbers or symbols. Legacy option.\n\nSee more: https://www.typescriptlang.org/tsconfig#keyofStringsOnly"},"useDefineForClassFields":{"type":"boolean","default":false,"markdownDescription":"Emit ECMAScript-standard-compliant class fields.\n\nSee more: https://www.typescriptlang.org/tsconfig#useDefineForClassFields"},"declarationMap":{"type":"boolean","default":false,"markdownDescription":"Create sourcemaps for d.ts files.\n\nSee more: https://www.typescriptlang.org/tsconfig#declarationMap"},"resolveJsonModule":{"type":"boolean","default":false,"markdownDescription":"Enable importing .json files\n\nSee more: https://www.typescriptlang.org/tsconfig#resolveJsonModule"},"assumeChangesOnlyAffectDirectDependencies":{"type":"boolean"},"extendedDiagnostics":{"type":"boolean","default":false,"markdownDescription":"Output more detailed compiler performance information after building.\n\nSee more: https://www.typescriptlang.org/tsconfig#extendedDiagnostics"},"listFilesOnly":{"type":"boolean"},"disableSourceOfProjectReferenceRedirect":{"type":"boolean","markdownDescription":"Disable preferring source files instead of declaration files when referencing composite projects\n\nSee more: https://www.typescriptlang.org/tsconfig#disableSourceOfProjectReferenceRedirect"},"disableSolutionSearching":{"type":"boolean","markdownDescription":"Opt a project out of multi-project reference checking when editing.\n\nSee more: https://www.typescriptlang.org/tsconfig#disableSolutionSearching"}}}}},"typeAcquisitionDefinition":{"properties":{"typeAcquisition":{"type":"object","properties":{"enable":{"type":"boolean","default":false},"include":{"type":"array","uniqueItems":true,"items":{"type":"string"}},"exclude":{"type":"array","uniqueItems":true,"items":{"type":"string"}}}}}},"referencesDefinition":{"properties":{"references":{"type":"array","uniqueItems":true,"items":{"type":"object","properties":{"path":{"type":"string"}}}}}}},"type":"object","allOf":[{"$ref":"#/definitions/compilerOptionsDefinition"},{"$ref":"#/definitions/compileOnSaveDefinition"},{"$ref":"#/definitions/typeAcquisitionDefinition"},{"$ref":"#/definitions/extendsDefinition"},{"$ref":"#/definitions/watchOptionsDefinition"},{"$ref":"#/definitions/buildOptionsDefinition"},{"anyOf":[{"$ref":"#/definitions/filesDefinition"},{"$ref":"#/definitions/excludeDefinition"},{"$ref":"#/definitions/includeDefinition"},{"$ref":"#/definitions/referencesDefinition"}]}]}